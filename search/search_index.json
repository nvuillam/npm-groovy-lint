{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#npm-groovy-lint-format-auto-fix","title":"NPM GROOVY LINT (+ Format &amp; Auto-fix)","text":""},{"location":"#groovy-jenkinsfile-linter-formatter-and-auto-fixer","title":"Groovy &amp; Jenkinsfile Linter, Formatter and Auto-fixer","text":"<p>New: The article about the story of npm-groovy-lint, and why you should dive in open-source community !</p> <p>Based on CodeNarc , this out of the box package allows to track groovy errors and correct a part of them</p> <ul> <li>Use option --format to format &amp; prettify source code</li> <li>Use option --fix to activate autofixing of fixable rules</li> </ul> <p>Easy to integrate in a CI/CD process (Jenkins Pipeline,CircleCI...) to lint your groovy or Jenkinsfile at each build :)</p> <p>You can also use this package in :</p> <ul> <li>Visual Studio Code Groovy Lint extension</li> <li>Mega-Linter (can be used as GitHub Action, and lints all other languages and formats)</li> <li>Docker Image</li> </ul> <p></p> <p>See CHANGELOG</p> <p>Any question, problem or enhancement request ? Ask here :)</p>"},{"location":"#usage","title":"Usage","text":"<pre><code>    npm-groovy-lint [OPTIONS] [FILES|PATH|PATTERN]\n</code></pre> Parameter Type Description -o --output String Output format (txt,json,sarif,html,xml), or path to a file with one of these extensions Default: <code>txt</code> Examples: - <code>\"txt\"</code> - <code>\"json\"</code> - <code>\"./logs/myLintResults.txt\"</code> - <code>\"./logs/myLintResults.sarif\"</code> - <code>\"./logs/myLintResults.html\"</code> - <code>\"./logs/myLintResults.xml\"</code>Note: HTML and XML are directly from CodeNarc so using these formats will disable many npm-groovy-lint features -l --loglevel String Log level (error,warning or info)Default: info --failon String Defines the error level where CLI will fail (return code = 1). error,warning,info or none. Each failure level includes the more critical ones. -c --config String Custom path to GroovyLint config file, or preset config <code>recommended\\|recommended-jenkinsfile\\|all</code> Default: Browse current directory to find <code>.groovylintrc.json\\|js\\|yml\\|package.json</code> config file, or default npm-groovy-lint config if not defined.Note: command-line arguments have priority on config file properties --parse Boolean Try to compile the source code and return parse errors (since v5.7.0, default to true, use --no-parse to deactivate) --format Boolean Format source code --fix Boolean Automatically fix problems when possible See Auto-fixable rules -x --fixrules String Option for --fix argument: List of rule identifiers to fix (if not specified, all available fixes will be applied). See Auto-fixable rules  Examples: - <code>\"SpaceBeforeClosingBrace,SpaceAfterClosingBrace,UnusedImport\"</code> - <code>\"Indentation\"</code> --nolintafter Boolean When format or fix is called, a new lint is performed after the fixes to update the returned error list. If you just want the updated source code and do not care about the error logs, use this parameter to improve performances -r --rulesets String RuleSet file(s) to use for linting, if you do not want to use recommended rules or .groovylintrc.js defined rules.If list of comma separated strings corresponding to CodeNarc rules, a RuleSet file will be dynamically generated   Examples: - <code>\"./config/codenarc/RuleSet-Custom.groovy\"</code> - <code>\"./path/to/my/ruleset/files\"</code>- <code>Indentation{\"spacesPerIndentLevel\":2,\"severity\":\"warning\"},UnnecessarySemicolon,UnnecessaryGString</code> --rulesetsoverridetype String If list of rules sent in rulesets option, defines if they replace rules defined in .groovylintrc.json, or if they are appended Values: <code>replaceConfig</code> (default), <code>appendConfig</code> -s --source String If path and files are not set, you can directly send the source code string to analyze --verbose Boolean More outputs in console, including performed fixes -i --ignorepattern String Comma-separated list of Ant-style file patterns specifying files that must be ignored Default: none Example: <code>\"**/test/*\"\"</code> --noserver Boolean npm-groovy-lint launches a microservice to avoid performance issues caused by loading java/groovy each time,that auto kills itself after 1h idle. Use this argument if you do not want to use this feature --returnrules Boolean Return rules descriptions and URL if set --javaexecutable String Override java executable to use  Default: javaExample: C:\\Program Files\\Java\\jdk1.8.0_144\\bin\\java.exe --javaoptions String Override java options to use  Default: \"-Xms256m,-Xmx2048m\" --insight Boolean npm-groovy-lint collects anonymous usage statistics using amplitude, in order to make new improvements based on how users use this package.  Summary charts are available at https://tinyurl.com/groovy-stats. Analytics obviously does not receive sensitive information like your code, as you can see in analytics.js. If you want to enable anonymous usage statistics, use <code>--insight</code> option. --codenarcargs String Use core CodeNarc arguments (all npm-groovy-lint arguments will be ignored) Doc: http://codenarc.github.io/CodeNarc/codenarc-command-line.html Example: <code>npm-groovy-lint --codenarcargs -basedir=\"lib/example\" -rulesetfiles=\"file:lib/example/RuleSet-Groovy.groovy\" -maxPriority1Violations=0 -report=\"xml:ReportTestCodenarc.xml</code> -h --help Boolean Show help (npm-groovy-lint -h OPTIONNAME to see option detail with examples) -v --version Boolean Show npm-groovy-lint version (with CodeNarc version) -p --path String (DEPRECATED) Directory containing the files to lint Example: <code>./path/to/my/groovy/files</code> -f --files String (DEPRECATED) Comma-separated list of Ant-style file patterns specifying files that must be included. Default: <code>\"**/*.groovy,**/Jenkinsfile,**/*.gradle\"</code>Examples: - <code>\"**/Jenkinsfile\"</code> - <code>\"**/*.groovy\"</code> - <code>\"**/*.gradle\"</code> - <code>\"**/mySingleFile.groovy\"</code>"},{"location":"#example-calls","title":"Example calls","text":"<ul> <li>Lint a file</li> </ul> <pre><code>    npm-groovy-lint path/to/my/groovy/file.groovy\n</code></pre> <ul> <li>Lint multiple files</li> </ul> <pre><code>    npm-groovy-lint path/to/my/groovy/file.groovy path/to/my/groovy/file2.groovy path/to/my/groovy/file3.groovy\n</code></pre> <ul> <li>Lint directory</li> </ul> <pre><code>    npm-groovy-lint path/to/my/groovy\n</code></pre> <ul> <li>Lint pattern</li> </ul> <pre><code>    npm-groovy-lint path/to/my/groovy/*.groovy\n</code></pre> <ul> <li>Lint groovy with JSON output</li> </ul> <pre><code>    npm-groovy-lint --output json\n</code></pre> <ul> <li>Format files</li> </ul> <pre><code>    npm-groovy-lint --format my/path/to/file.groovy my/path/to/file2.groovy\n</code></pre> <ul> <li>Format and fix files</li> </ul> <pre><code>    npm-groovy-lint --fix my/path/to/file.groovy my/path/to/file2.groovy\n</code></pre> <ul> <li>Get formatted sources in stdout from stdin</li> </ul> <pre><code>    cat path/to/my/Jenkinsfile | npm-groovy-lint --format -\n</code></pre> <ul> <li>Advanced config</li> </ul> <pre><code>    npm-groovy-lint --path \"./path/to/my/groovy/files\" --files \"**/*.groovy\" --config \"./config/codenarc/.groovylintrcCustom.js\" --loglevel warning --output txt\n</code></pre> <ul> <li>Lint using core CodeNarc parameters and generate HTML report file</li> </ul> <pre><code>    npm-groovy-lint --codenarcargs -basedir=\"lib/example\" -rulesetfiles=\"file:lib/example/RuleSet-Groovy.groovy\" -title=\"TestTitleCodenarc\" -maxPriority1Violations=0' -report=\"html:ReportTestCodenarc.html\"\n</code></pre>"},{"location":"#installation","title":"Installation","text":"<pre><code>    npm install -g npm-groovy-lint\n</code></pre> <ul> <li>If you have issues with v9, install previous version with <code>npm install -g npm-groovy-lint@8.2.0</code></li> <li>Node.js &gt;= 12 is required to run this package. If you can't upgrade, you can use nvm to have different node versions on your computer</li> <li>If you do not have java 17 installed on your computer, npm-groovy-lint will install them for you, so the first run may be long.</li> </ul>"},{"location":"#configuration","title":"Configuration","text":"<p>Default rules definition (<code>recommended</code>, based on <code>all</code> tracks a lot of errors, do not hesitate to ignore some of them (like NoDef ou RequiredVariableType) if they are too mean for your project.</p> <p>Create a file named .groovylintrc.json in the current or any parent directory of where your files to analyze are located</p> <ul> <li>your-repo-root-folder<ul> <li>src<ul> <li>groovy<ul> <li>mygroovyfile.groovy</li> </ul> </li> </ul> </li> <li>Jenkinsfile</li> <li>.groovylintrc.json (do not forget the dot at the beginning of the file name)</li> </ul> </li> </ul> <p>If you are using VsCode Groovy Lint extension, just use QuickFix Ignore in all files and it will generate groovylintrc.json file.</p>"},{"location":"#format","title":"Format","text":"<ul> <li>extends: Name of a base configuration (<code>recommended</code>, <code>recommended-jenkinsfile</code>, <code>all</code>)</li> <li>rules: List of rules definition, following format <code>\"RuleSection.RuleName\": ruleParameters</code> or <code>\"RuleName\": ruleParameters</code><ul> <li>RuleName: any of the CodeNarc rules</li> <li>ruleParameters: can be just a severity override ( <code>\"off\"</code>, <code>\"error\"</code>, <code>\"warning\"</code>, <code>\"info\"</code> ) , or a property list :<ul> <li>severity : off,error,warning,info</li> <li>enabled : true (default) or false</li> <li>any of the rule advanced properties</li> </ul> </li> </ul> </li> </ul> <p>OR</p> <ul> <li>codenarcRulesets: Comma-separated string containing the list of <code>.xml</code> or <code>.groovy</code> CodeNarc RuleSet files (in case you already are a CodeNarc user and do not wish to switch to npm-groovy-lint config format)</li> </ul>"},{"location":"#examples","title":"Examples","text":"<pre><code>{\n    \"extends\": \"recommended\",\n    \"rules\": {\n        \"comments.ClassJavadoc\": \"off\",\n        \"formatting.Indentation\": {\n            \"spacesPerIndentLevel\": 4,\n            \"severity\": \"info\"\n        },\n        \"UnnecessaryReturnKeyword\": \"error\"\n    }\n}\n</code></pre> <pre><code>{\n    \"extends\": \"recommended-jenkinsfile\",\n    \"rules\": {\n        \"CouldBeElvis\": \"off\",\n        \"CouldBeSwitchStatement\": \"off\",\n        \"VariableName\": {\n            \"severity\": \"info\"\n        }\n    }\n}\n</code></pre> <pre><code>{\n    \"codenarcRulesets\": \"RuleSet-1.groovy,RuleSet-2.groovy\"\n}\n</code></pre>"},{"location":"#disabling-rules-in-source","title":"Disabling rules in source","text":"<p>You can disable rules directly by adding comment in file, using eslint style</p> <p>To temporarily disable rule warnings in your file, use block comments in the following format:</p> <pre><code>/* groovylint-disable */\n\ndef variable = 1;\n\n/* groovylint-enable */\n</code></pre> <p>You can also disable or enable warnings for specific rules:</p> <pre><code>/* groovylint-disable NoDef, UnnecessarySemicolon */\n\ndef variable = 1;\n\n/* groovylint-enable NoDef, UnnecessarySemicolon */\n</code></pre> <p>To disable rule warnings in an entire file, put a <code>/* groovylint-disable */</code> block comment at the top of the file:</p> <pre><code>/* groovylint-disable */\n\ndef variable = 1;\n</code></pre> <p>You can also disable or enable specific rules for an entire file:</p> <pre><code>/* groovylint-disable NoDef */\n\ndef variable = 1;\n</code></pre> <p>To disable all rules on a specific line, use a line or block comment in one of the following formats:</p> <pre><code>def variable = 1; // groovylint-disable-line\n\n// groovylint-disable-next-line\ndef variable = 1;\n\n/* groovylint-disable-next-line */\ndef variable = 1;\n\ndef variable = 1; /* groovylint-disable-line */\n</code></pre> <p>To disable a specific rule on a specific line:</p> <pre><code>def variable = 1; // groovylint-disable-line NoDef\n\n// groovylint-disable-next-line NoDef\ndef variable = 1;\n\ndef variable = 1; /* groovylint-disable-line NoDef */\n\n/* groovylint-disable-next-line NoDef */\ndef variable = 1;\n</code></pre> <p>To disable multiple rules on a specific line:</p> <pre><code>def variable = 1; // groovylint-disable-line NoDef, UnnecessarySemicolon\n\n// groovylint-disable-next-line NoDef, UnnecessarySemicolon\ndef variable = 1;\n\ndef variable = 1; /* groovylint-disable-line NoDef, UnnecessarySemicolon */\n\n/* groovylint-disable-next-line NoDef, UnnecessarySemicolon */\ndef variable = 1;\n</code></pre>"},{"location":"#auto-fixable-rules","title":"Auto-Fixable rules","text":"<ul> <li>AssignmentInConditional</li> <li>BlankLineBeforePackage</li> <li>BlockEndsWithBlankLine</li> <li>BlockStartsWithBlankLine</li> <li>BracesForClass</li> <li>BracesForForLoop</li> <li>BracesForIfElse</li> <li>BracesForMethod</li> <li>BracesForTryCatchFinally</li> <li>ClassEndsWithBlankLine</li> <li>ClassStartsWithBlankLine</li> <li>ClosingBraceNotAlone</li> <li>ConsecutiveBlankLines</li> <li>DuplicateImport</li> <li>ElseBlockBraces</li> <li>ExplicitArrayListInstantiation</li> <li>ExplicitLinkedListInstantiation</li> <li>FileEndsWithoutNewline</li> <li>IfStatementBraces</li> <li>Indentation</li> <li>IndentationClosingBraces</li> <li>IndentationComments</li> <li>InsecureRandom</li> <li>MisorderedStaticImports</li> <li>MissingBlankLineAfterImports</li> <li>MissingBlankLineAfterPackage</li> <li>NoTabCharacter</li> <li>SpaceAfterCatch</li> <li>SpaceAfterComma</li> <li>SpaceAfterFor</li> <li>SpaceAfterIf</li> <li>SpaceAfterOpeningBrace</li> <li>SpaceAfterSemicolon</li> <li>SpaceAfterSwitch</li> <li>SpaceAfterWhile</li> <li>SpaceAroundOperator</li> <li>SpaceBeforeClosingBrace</li> <li>SpaceBeforeOpeningBrace</li> <li>TrailingWhitespace</li> <li>UnnecessaryDefInFieldDeclaration</li> <li>UnnecessaryDefInMethodDeclaration</li> <li>UnnecessaryDefInVariableDeclaration</li> <li>UnnecessaryDotClass</li> <li>UnnecessaryFinalOnPrivateMethod</li> <li>UnnecessaryGString</li> <li>UnnecessaryGroovyImport</li> <li>UnnecessaryPackageReference</li> <li>UnnecessaryParenthesesForMethodCallWithClosure</li> <li>UnnecessarySemicolon</li> <li>UnnecessaryToString</li> <li>UnusedImport</li> </ul> <p>Contribute to add more rules fixes :)</p>"},{"location":"#cicd","title":"CI/CD","text":""},{"location":"#mega-linter","title":"Mega-Linter","text":"<p>Latest npm-groovy-lint version is natively integrated in Mega-Linter, that you can use as GitHub action or in other CI tools This tool can also automatically apply fixes on Pull Request branches</p>"},{"location":"#circleci","title":"CircleCI","text":"<pre><code># .circleci/config.yml\nversion: 2.1\njobs:\n  lint:\n    docker:\n      - image: nvuillam/npm-groovy-lint\n    steps:\n      - checkout\n\n      - run: |\n          npm-groovy-lint\n\nworkflows:\n  version: 2\n  \"lint\":\n    jobs:\n       - lint\n</code></pre>"},{"location":"#jenkins","title":"Jenkins","text":"<pre><code>node {\n    checkout scm\n    docker.image('nvuillam/npm-groovy-lint').inside {\n        sh 'npm-groovy-lint'\n    }\n}\n</code></pre>"},{"location":"#shell","title":"Shell","text":"<p>Run with default settings</p> <pre><code>docker run --rm -u \"$(id -u):$(id -g)\" -w=/tmp -v \"$PWD\":/tmp nvuillam/npm-groovy-lint\n</code></pre> <p>Run with additional flags by simply appending them at after docker image name:</p> <pre><code>docker run --rm -u \"$(id -u):$(id -g)\" -w=/tmp -v \"$PWD\":/tmp nvuillam/npm-groovy-lint --failon warning --verbose\n</code></pre>"},{"location":"#other","title":"Other","text":"<p>You can run npm-groovy-lint using its official docker image</p>"},{"location":"#use-as-module","title":"Use as module","text":"<p>You can import npm-groovy-lint into your NPM package and call lint &amp; fix via module, using the same options than from npm-groovy-lint command line</p> <p>Example</p> <pre><code>    npm install npm-groovy-lint --save\n</code></pre> <pre><code>    const NpmGroovyLint = require(\"npm-groovy-lint/lib/groovy-lint.js\");\n    const fse = require(\"fs-extra\");\n\n    const npmGroovyLintConfig = {\n        source: fse.readFileSync('./lib/example/SampleFile.groovy').toString(),\n        fix: true,\n        loglevel: 'warning',\n        output: 'none'\n    };\n    const linter = new NpmGroovyLint(npmGroovyLintConfig, {});\n    await linter.run();\n    console.log(JSON.stringify(linter.lintResult));\n</code></pre>"},{"location":"#troubleshooting","title":"Troubleshooting","text":"<p>If you have issues with MegaLinter, you can report it on the repository</p> <p>To help reproducing, you can access advanced logs using DEBUG env variables</p> <p>Examples:</p> <ul> <li><code>DEBUG=npm-groovy-lint npm-groovy-lint ....</code></li> <li><code>DEBUG=npm-groovy-lint,npm-groovy-lint-trace npm-groovy-lint ....</code></li> </ul> <p>If you want to see what happens in CodeNarc Server, you can clone the repo and run locally <code>npm server:run</code> before running npm-groovy-lint: you'll see the live logs of the to CodeNarc Server for npm-groovy-lint.</p>"},{"location":"#contribute","title":"Contribute","text":"<p>Contributions are very welcome !</p> <p>Please follow Contribution instructions</p>"},{"location":"#thanks","title":"Thanks","text":""},{"location":"#other-packages-used","title":"Other packages used","text":"<ul> <li>CodeNarc: groovy lint</li> <li>java-caller: Easy call Java commands from Node</li> <li>slf4j: logging for CodeNarc</li> <li>log4j: logging for CodeNarc</li> <li>GMetrics: Code measures for CodeNarc</li> <li>Inspiration from eslint about configuration and run patterns</li> </ul>"},{"location":"#contributors","title":"Contributors","text":"Nicolas Vuillamy Dave Gallant Howard Lo Pawel Kopka docwhat CatSue"},{"location":"#release-notes","title":"Release notes","text":"<p>See complete CHANGELOG</p>"},{"location":"CHANGELOG/","title":"Changelog","text":""},{"location":"CHANGELOG/#beta","title":"Beta","text":""},{"location":"CHANGELOG/#1522-2025-10-07","title":"[15.2.2] 2025-10-07","text":"<ul> <li>Fix curly bracket should not get commented out by method comments between parenthesis and curly brackets, by @damien-rembert in https://github.com/nvuillam/npm-groovy-lint/pull/470</li> <li>Fix Autofix of unnecessary GString leaves invalid code in data provider of spock tests, by @damien-rembert in https://github.com/nvuillam/npm-groovy-lint/pull/471</li> <li>Upgrade npm dependencies</li> <li>Upgrade GitHub Actions dependencies</li> </ul>"},{"location":"CHANGELOG/#1521-2025-07-27","title":"[15.2.1] 2025-07-27","text":"<ul> <li>Upgrade npm dependencies</li> <li>Use MegaLinter custom flavor</li> </ul>"},{"location":"CHANGELOG/#1520-2025-05-11","title":"[15.2.0] 2025-05-11","text":"<ul> <li>New script to automate the upgrade of JAR dependencies</li> <li>Upgrade Groovy to 4.0.26</li> <li>Upgrade node-java-caller to 4.2.1</li> </ul>"},{"location":"CHANGELOG/#1510-2025-02-23","title":"[15.1.0] 2025-02-23","text":"<ul> <li>Upgrade to CodeNarc 3.6.0 and Groovy 4.0.25</li> <li>Updates to support groovy 4 by @AngMits in https://github.com/nvuillam/npm-groovy-lint/pull/439</li> <li>fix(cli): account for parse errors being of string type by @joshzcold in https://github.com/nvuillam/npm-groovy-lint/pull/444</li> <li>Upgrade npm dependencies</li> </ul>"},{"location":"CHANGELOG/#1502-2024-08-30","title":"[15.0.2] 2024-08-30","text":"<ul> <li>Upgrade node-java-caller to fix bug with <code>npm-groovy-lint --version</code> on linux</li> </ul>"},{"location":"CHANGELOG/#1501-2024-08-29","title":"[15.0.1] 2024-08-29","text":"<ul> <li>Add module declaration</li> <li>Fix crash in case of parsing error (https://github.com/nvuillam/npm-groovy-lint/issues/406)</li> <li>Disable codecov</li> </ul>"},{"location":"CHANGELOG/#1500-2024-08-26","title":"[15.0.0] 2024-08-26","text":"<ul> <li>Convert to ES Module</li> <li>Upgrade to CodeNarc 3.5.0</li> <li>Upgrade NodeJs to minimum version 20</li> <li>Setup renovate</li> <li>Upgrade dependencies, including base package node-java-caller</li> <li>Upgrade MegaLinter to v8</li> <li>Remove decode-html-entities dependency</li> </ul>"},{"location":"CHANGELOG/#1460-2024-05-08","title":"[14.6.0] 2024-05-08","text":"<ul> <li>Upgrade node-java-caller to v4 to solve issues with Mac</li> </ul>"},{"location":"CHANGELOG/#1450-2024-04-28","title":"[14.5.0] 2024-04-28","text":"<ul> <li>Change license to MIT</li> </ul>"},{"location":"CHANGELOG/#1441-2024-04-16","title":"[14.4.1] 2024-04-16","text":"<ul> <li>Upgrade tar to avoid CVE</li> </ul>"},{"location":"CHANGELOG/#1440-2024-03-27","title":"[14.4.0] 2024-03-27","text":"<ul> <li>Remove amplitude dependency and anonymous telemetry</li> </ul>"},{"location":"CHANGELOG/#1430-2024-03-27","title":"[14.3.0] 2024-03-27","text":"<ul> <li>Upgrade amplitude dependency</li> <li>Remove markdown links checks in internal CI (requirement covered by lychee)</li> </ul>"},{"location":"CHANGELOG/#1424-2024-03-13","title":"[14.2.4] 2024-03-13","text":"<ul> <li>Fix issue with anonymous telemetry</li> </ul>"},{"location":"CHANGELOG/#1423-2024-02-26","title":"[14.2.3] 2024-02-26","text":"<ul> <li>Fix #351: temp directories aren't cleaned up </li> </ul>"},{"location":"CHANGELOG/#1422-2024-02-18","title":"[14.2.2] 2024-02-18","text":"<ul> <li>Fix <code>console.warning is not a function</code></li> </ul>"},{"location":"CHANGELOG/#1421-2024-02-09","title":"[14.2.1] 2024-02-09","text":"<ul> <li>fix: class not found request failure</li> </ul>"},{"location":"CHANGELOG/#1410-2024-01-15","title":"[14.1.0] 2024-01-15","text":"<ul> <li>fix: missing parse errors with --noserver</li> <li>Deactivate log file by default</li> </ul>"},{"location":"CHANGELOG/#1401-2023-12-18","title":"[14.0.1] 2023-12-18","text":"<ul> <li>fix: analytics send failure error</li> </ul>"},{"location":"CHANGELOG/#1400-2023-12-16","title":"[14.0.0] 2023-12-16","text":"<ul> <li>Fix data race on stdout capture which was corrupting the responses for overlapping requests by using a capturing plugin.</li> <li>Fix data race on threads read and write which could result in missed cancellations and re-enable cancellation processing.</li> <li>Ensure that threads are always removed in the case of write response exception.</li> <li>Switch to jackson to enable efficient JSON encoding and decoding including raw embedding of CodeNarc result to avoid unnecessary processing.</li> <li>Split out HTTP filters to their own files.</li> <li>Use typed variables instead of def per linter recommendation.</li> <li>Add early test for missing base directory to avoid running linter unnecessarily.</li> <li>Fix parse failures for files which contain classes that only non-zero argument constructors.</li> <li>Add gzip compression to reduce size of network traffic to improve performance</li> <li>CI: Enhance MegaLinter config</li> <li>CI: Upload expected sources as artifact if Check for changes job fails</li> </ul>"},{"location":"CHANGELOG/#1302-2023-12-07","title":"[13.0.2] 2023-12-07","text":"<ul> <li>Remove useless console.log in sources.</li> </ul>"},{"location":"CHANGELOG/#1301-2023-12-06","title":"[13.0.1] 2023-12-06","text":"<ul> <li>Update logback to 1.4.14 to address cve-2023-6378</li> </ul>"},{"location":"CHANGELOG/#1300-2023-11-26","title":"[13.0.0] 2023-11-26","text":"<ul> <li>BREAKING CHANGE: Upgrade CodeNarc to v3.4.0-alpha+3346775f</li> </ul> <ul> <li> <p>Major core architecture refactoring by the great Steven Hartland</p> <ul> <li>Fix files specified on the command line not linting as expected due to the generated patterns not working as intended if relative path that contains a file and not a directory due to an issue with CodeNarc pattern processing.</li> </ul> <ul> <li>Fix incompatible arguments passed to CodeNarc by:<ul> <li>Using arrays internally to avoid issues with spaces in arguments being interpreted incorrectly.</li> <li>Stripping all quotes from string arguments as CodeNarc doesn't handle them correctly.</li> <li>Enable automatic argument quoting on Windows.</li> </ul> </li> </ul> <ul> <li>Fix command line -ext extensions not being processed correctly and matching too many files as it was missing the prefix.</li> </ul> <ul> <li>Ensure readFile and writeFile calls produce a stack trace on failure due to: https://github.com/nodejs/node/issues/30944.</li> </ul> <ul> <li>Fix file delete race condition and variable clean up due to missing await.</li> </ul> <ul> <li>Fix use of includes instead of exclude parameters.</li> </ul> </li> </ul> <ul> <li>Also:<ul> <li>Fixed Request failed logging</li> <li>Fix README.md typo</li> <li>Add additional useful debug logging</li> <li>Run dev:pre-commit to update CHANGELOG.md</li> <li>Add more cspell entries</li> <li>Add missing items to CodeNarcServer.groovy usage</li> <li>Re-enable tests which are now fixed</li> <li>Override axios for security patch</li> </ul> </li> </ul> <p>Steven Hartland now becomes an official maintainer of npm-groovy-lint and vscode-groovy-lint !</p>"},{"location":"CHANGELOG/#1220-2023-11-26","title":"[12.2.0] 2023-11-26","text":"<ul> <li>Upgrade java-caller dependency to 3.2.0 (Now handles Mac M1)</li> <li>Output issue when error collecting CodeNarc version</li> </ul>"},{"location":"CHANGELOG/#1212-2023-11-23","title":"[12.1.2] 2023-11-23","text":"<ul> <li>Revert update that output json when not requested</li> </ul>"},{"location":"CHANGELOG/#1211-2023-11-19","title":"[12.1.1] 2023-11-19","text":"<ul> <li>Upgrade node-java-caller to v3.1.1</li> </ul>"},{"location":"CHANGELOG/#1210-2023-11-18","title":"[12.1.0] 2023-11-18","text":"<ul> <li>Upgrade node-java-caller to v3.1.0</li> </ul>"},{"location":"CHANGELOG/#1201-2023-11-06","title":"[12.0.1] 2023-11-06","text":"<ul> <li>Fix: bump openjdk version from 11 to 17 in Docker image by @SerhiiKorolik in https://github.com/nvuillam/npm-groovy-lint/pull/317</li> </ul>"},{"location":"CHANGELOG/#1200-2023-11-04","title":"[12.0.0] 2023-11-04","text":"<p>Many fixes, including an issue with IPV6 that made npm-groovy-lint crash on many machines, has been fixed by @stevenh ! Many thanks to him !</p> <p>Breaking change: Minimum java version to Java 17</p> <ul> <li>Use MegaLinter v7 by @nvuillam in https://github.com/nvuillam/npm-groovy-lint/pull/254</li> <li>Bump json5 from 2.2.1 to 2.2.3 by @dependabot in https://github.com/nvuillam/npm-groovy-lint/pull/260</li> <li>ci: fix action failures by @stevenh in https://github.com/nvuillam/npm-groovy-lint/pull/309</li> <li>chore: update node to 18 lts by @stevenh in https://github.com/nvuillam/npm-groovy-lint/pull/310</li> <li>feat: improve the vscode deployment by @stevenh in https://github.com/nvuillam/npm-groovy-lint/pull/307</li> <li>Improve publish via CI + beta when in main by @nvuillam in https://github.com/nvuillam/npm-groovy-lint/pull/311</li> <li>chore: improve flow debugging by @stevenh in https://github.com/nvuillam/npm-groovy-lint/pull/303</li> <li>ci: predictable server builds and port option by @stevenh in https://github.com/nvuillam/npm-groovy-lint/pull/312</li> <li>fix: status bar message by @stevenh in https://github.com/nvuillam/npm-groovy-lint/pull/302</li> <li>fix: server and test stability by @stevenh in https://github.com/nvuillam/npm-groovy-lint/pull/313</li> <li>fix: UnnecessaryGString for strings with slashes by @stevenh in https://github.com/nvuillam/npm-groovy-lint/pull/304</li> </ul>"},{"location":"CHANGELOG/#1111-2022-10-31","title":"[11.1.1] 2022-10-31","text":"<ul> <li>Fix npm dependency minimatch</li> </ul>"},{"location":"CHANGELOG/#1110-2022-10-31","title":"[11.1.0] 2022-10-31","text":"<ul> <li>Provide default range when only information available is a line number (#248)</li> <li>New CodeNarc issues definition to calculate range in file<ul> <li>GStringExpressionWithinString</li> <li>VariableName</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#1100-2022-10-07","title":"[11.0.0] 2022-10-07","text":"<ul> <li>BREAKING CHANGE:<code>--failon</code> is now <code>\u00ecnfo</code> by default, meaning exit code will be <code>1</code> if there is at least an info issue found. To have previous behaviour, use <code>--failon none</code>.</li> <li>Display all files in console log only if <code>--verbose</code> is used (#243)</li> </ul>"},{"location":"CHANGELOG/#1010-2022-08-15","title":"[10.1.0] 2022-08-15","text":"<ul> <li>Allow to send groovy sources as input from stdin</li> <li>If <code>--format</code> or <code>--fix</code> option is used when source is sent as stdin, the result is output as stdout</li> </ul> <p>Example: <code>cat path/to/my/Jenkinsfile | npm-groovy-lint --format -</code></p>"},{"location":"CHANGELOG/#1003-2022-08-15","title":"[10.0.3] 2022-08-15","text":"<ul> <li>Do not output results summary in console logs when output is json or sarif</li> <li>Add test methods for SARIF called by CLI</li> </ul>"},{"location":"CHANGELOG/#1002-2022-08-15","title":"[10.0.2] 2022-08-15","text":"<ul> <li>Fix error when absolute files sent as positional arguments on a linux system (#232)</li> <li>Improve performances by calculating the longest command directory to send as base path to CodeNarc</li> </ul>"},{"location":"CHANGELOG/#1001-2022-08-14","title":"[10.0.1] 2022-08-14","text":"<ul> <li>Fix error when files sent as positional arguments (#232)</li> </ul>"},{"location":"CHANGELOG/#1000-2022-08-13","title":"[10.0.0] 2022-08-13","text":"<ul> <li>Core<ul> <li>Upgrade to CodeNarc v3.1.0</li> <li>Accept list of directories / files as arguments (<code>--path</code> and <code>--files</code> become deprecated but are still usable)<ul> <li>Examples<ul> <li>Multiple files: <code>npm-groovy-lint path/to/file1.groovy path/to/file2.groovy</code></li> <li>Directory: <code>npm groovy-lint path/to</code></li> <li>Single file: <code>npm-groovy-lint Jenkinsfile</code></li> <li>Ant pattern(s): <code>npm-groovy-lint path/to/**/*.groovy</code></li> </ul> </li> </ul> </li> <li>Upgrade npm dependencies</li> <li>CI: Upgrade MegaLinter to v6</li> <li>Test classes for collecting error ranges</li> </ul> </li> </ul> <ul> <li>New error ranges rules<ul> <li>DuplicateNumberLiteral</li> <li>DuplicateStringLiteral</li> <li>MethodParameterTypeRequired</li> <li>NoDef</li> <li>SimpleDateFormatMissingLocale</li> <li>SpaceInsideParenthesis</li> <li>UnnecessaryPublicModifier</li> <li>VariableTypeRequired</li> </ul> </li> </ul> <ul> <li>New fix rules<ul> <li>SpaceAfterMethodCallName</li> <li>SpaceInsideParentheses</li> </ul> </li> </ul> <ul> <li>Bug Fixes<ul> <li>Wrongly calculated ranges are no more returned</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#950-2022-04-12","title":"[9.5.0] 2022-04-12","text":"<ul> <li>Disable Amplitude anonymous stats by default (use <code>--insight</code> to enable them)</li> </ul>"},{"location":"CHANGELOG/#941-2022-01-12","title":"[9.4.1] 2022-01-12","text":"<ul> <li>Upgrade node-sarif-builder to 2.0.1 and send npm-groovy-lint version in SARIF logs</li> <li>New range detection for rules:<ul> <li>MethodReturnTypeRequired</li> <li>UnusedImport</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#940-2022-01-11","title":"[9.4.0] 2022-01-11","text":"<ul> <li>Add SARIF output format using node-sarif-builder</li> </ul>"},{"location":"CHANGELOG/#932-2022-01-09","title":"[9.3.2] 2022-01-09","text":"<ul> <li>Upgrade cli-progress to avoid colors lib boring but harmless hack</li> </ul>"},{"location":"CHANGELOG/#931-2022-01-06","title":"[9.3.1] 2022-01-06","text":"<ul> <li>Fix issue when used as module and with file containing spaces (VsCodeGroovyLint #137)</li> </ul>"},{"location":"CHANGELOG/#930-2021-12-29","title":"[9.3.0] 2021-12-29","text":"<ul> <li>Upgrade log4j dependencies because of security issue.</li> </ul>"},{"location":"CHANGELOG/#920-2021-12-23","title":"[9.2.0] 2021-12-23","text":"<ul> <li>Upgrade log4j dependencies because of (another) security issue (#196)</li> </ul>"},{"location":"CHANGELOG/#910-2021-12-14","title":"[9.1.0] 2021-12-14","text":"<ul> <li>Upgrade log4j dependencies because of security issue (#194)</li> </ul>"},{"location":"CHANGELOG/#900-2021-09-30","title":"[9.0.0] 2021-09-30","text":"<ul> <li>Upgrade to CodeNarc v2.2.0</li> <li>Upgrade to Groovy v3.0.9</li> <li>Reorganize sources test folder</li> <li>Use java from 8 to 14 (install it if a later version is found)</li> <li>Add timeouts in CI jobs</li> <li>Add colors in error logs</li> </ul>"},{"location":"CHANGELOG/#820-2021-06-11","title":"[8.2.0] 2021-06-11","text":"<ul> <li>Upgrade dependencies advised by dependabot</li> <li>Fix Mega-Linter errors found</li> </ul>"},{"location":"CHANGELOG/#810-2020-12-14","title":"[8.1.0] 2020-12-14","text":"<ul> <li>Exclude <code>UnnecessaryGetter</code>, <code>FactoryMethodName</code>, <code>MethodReturnTypeRequired</code>, and <code>GStringExpressionWithinString</code> in <code>recommended-jenkinsfile</code> (#140) (Felipe Santos)</li> </ul>"},{"location":"CHANGELOG/#802-2020-11-26","title":"[8.0.2] 2020-11-26","text":"<ul> <li>Fix documentation about --verbose and --version options</li> <li>Use GitHub action to deploy to NPM</li> </ul>"},{"location":"CHANGELOG/#801-2020-11-19","title":"[8.0.1] 2020-11-19","text":"<ul> <li>Add a test case where variable includes if in its name for fix of rule SpaceAfterIf (Behl\u00fcl U\u00e7ar)</li> </ul>"},{"location":"CHANGELOG/#800-2020-11-15","title":"[8.0.0] 2020-11-15","text":"<ul> <li>Upgrade to CodeNarc 2.0.0<ul> <li>Upgrade jars</li> <li>Adapt Indentation rule to new behaviour</li> <li>Use codenarc --ruleset argument instead of temp ruleset file</li> </ul> </li> <li>Replace super-linter by Mega-Linter</li> <li>Fixes<ul> <li>(#127) Formatting breaks code, converting <code>else if</code> into <code>elseif</code> in some cases</li> <li>Apply formatting rules also for --fix mode</li> <li>Fix Markdown dead links</li> </ul> </li> <li>CI<ul> <li>Migrate from CircleCI to GitHub Actions: now tests are on Linux, Windows &amp; MacOs</li> <li>Activate spelling linter of Mega-Linter (+ <code>.cspell.json</code> file)</li> <li>Add test cases for format and fix using CLI</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#762-2020-09-09","title":"[7.6.2] 2020-09-09","text":"<ul> <li>Disable TrailingComma rule by default until crash is solved in CodeNarc (#75@vscode-groovy-lint)</li> </ul>"},{"location":"CHANGELOG/#760-2020-09-08","title":"[7.6.0] 2020-09-08","text":"<ul> <li>Add GitHub Action GitHub Super-Linter to the repository</li> <li>Update Dockerfile to pass Docker lint rules</li> </ul>"},{"location":"CHANGELOG/#755-2020-09-05","title":"[7.5.5] 2020-09-05","text":"<ul> <li>Upgrade java-caller to v2.2.3<ul> <li>Fix Java 8 detection (#101)</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#754-2020-09-04","title":"[7.5.4] 2020-09-04","text":"<ul> <li>Update frameworks detection</li> </ul>"},{"location":"CHANGELOG/#751-2020-09-02","title":"[7.5.1] 2020-09-02","text":"<ul> <li>Fix (#96) --fix adds redundant space into <code>${VARIABLE}</code> (SpaceBeforeOpeningBrace fix rule error)</li> <li>Fix grails framework detection</li> <li>Fix Groovy parsing parsing when multiple files</li> <li>Add <code>.gvy</code> and <code>.nf</code> in default browsed files extensions</li> </ul>"},{"location":"CHANGELOG/#750-2020-09-02","title":"[7.5.0] 2020-09-02","text":"<ul> <li>Add anonymous framework usage stats for Groovy core Team</li> </ul>"},{"location":"CHANGELOG/#743-2020-08-29","title":"[7.4.3] 2020-08-29","text":"<ul> <li>Upgrade java-caller to v2.2.0<ul> <li>Fix CLASSPATH on windows in case there are spaces in paths</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#742-2020-08-26","title":"[7.4.2] 2020-08-26","text":"<ul> <li>Fix (#90) When log level is specified number of linted files appear to be off</li> </ul>"},{"location":"CHANGELOG/#741-2020-08-23","title":"[7.4.1] 2020-08-23","text":"<ul> <li>(#88) Fix Docker image to allow to use extra parameters (by Howard Lo)</li> </ul>"},{"location":"CHANGELOG/#740-2020-08-17","title":"[7.4.0] 2020-08-17","text":"<ul> <li>(#87) update to openjdk 11 in official Docker image (by Pawel Kopka)</li> </ul>"},{"location":"CHANGELOG/#731-2020-08-16","title":"[7.3.1] 2020-08-16","text":"<ul> <li>Add number of lines &amp; reorganize anonymous statistics</li> <li>Fix error type counters in anonymous statistics</li> </ul>"},{"location":"CHANGELOG/#730-2020-08-15","title":"[7.3.0] 2020-08-15","text":"<ul> <li>Allow to link to CodeNarc RuleSet files from <code>.groovylintrc.json</code>, using property <code>\"codenarcRulesets\"</code>. Warning: doing so means that all other properties of config file will be ignored.</li> </ul>"},{"location":"CHANGELOG/#711-2020-08-11","title":"[7.1.1] 2020-08-11","text":"<ul> <li>Upgrade java-caller to v2.0.0</li> </ul>"},{"location":"CHANGELOG/#710-2020-08-10","title":"[7.1.0] 2020-08-10","text":"<ul> <li>Externalize JavaCaller class into a separate package java-caller and use it</li> </ul>"},{"location":"CHANGELOG/#700-2020-08-07","title":"[7.0.0] 2020-08-07","text":"<ul> <li>New default recommended rules (activate/deactivate/change severity)</li> <li>Allow to call <code>--config recommended-jenkinsfile</code> to use delivered .groovylintrc-recommended-jenkinsfile.json</li> </ul>"},{"location":"CHANGELOG/#611-2020-08-04","title":"[6.1.1] 2020-08-04","text":"<ul> <li>Fix SpaceAfterComma auto-fixing rule</li> </ul>"},{"location":"CHANGELOG/#610-2020-08-04","title":"[6.1.0] 2020-08-04","text":"<ul> <li>Java 14 compatibility (Closes #77)</li> </ul>"},{"location":"CHANGELOG/#600-2020-08-03","title":"[6.0.0] 2020-08-03","text":"<ul> <li>Upgrade to CodeNarc v1.6.1<ul> <li>Update list of rules</li> <li>Use new CodeNarc JSON console Output instead of temporary XML files</li> <li>Call CodeNarc to get its version instead of using npm-groovy-lint hardcoded value</li> </ul> </li> <li>Upgrade to GMetrics v1.1</li> <li>Upgrade to Groovy v3.0.5</li> <li>Add anonymous usage stats on types of errors found and fixed</li> </ul>"},{"location":"CHANGELOG/#580-2020-08-01","title":"[5.8.0] 2020-08-01","text":"<ul> <li>Fix &amp; enhance anonymous statistics</li> </ul>"},{"location":"CHANGELOG/#570-2020-07-23","title":"[5.7.0] 2020-07-23","text":"<ul> <li>(#62) Check parse error in all files when called via CLI . Closes #69</li> </ul>"},{"location":"CHANGELOG/#561-2020-07-20","title":"[5.6.1] 2020-07-20","text":"<p>Fixes:</p> <ul> <li>(#62) using a codenarc ruleset file seems to fail / groovylintrc is not codenarc compatible</li> </ul>"},{"location":"CHANGELOG/#560-2020-07-20","title":"[5.6.0] 2020-07-20","text":"<ul> <li>(#68) Generate a ready-to-use docker image when publishing new npm-groovy-lint version (by Dave Gallant)</li> </ul>"},{"location":"CHANGELOG/#551-2020-07-15","title":"[5.5.1] 2020-07-15","text":"<ul> <li>Fixes<ul> <li>(#64) The contents of a string gets formatted unexpectedly</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#550-2020-07-09","title":"[5.5.0] 2020-07-09","text":"<ul> <li>Allow to override java executable and options (#54)</li> </ul>"},{"location":"CHANGELOG/#542-2020-07-09","title":"[5.4.2] 2020-07-09","text":"<ul> <li>Use os.EOL (#65) solving  (#63) --fix for indentation adds CRLF line-endings to all files it touches</li> </ul>"},{"location":"CHANGELOG/#541-2020-07-01","title":"[5.4.1] 2020-07-01","text":"<ul> <li>CodeNarcServer listens to localhost only (#59) solving (#56)</li> <li>Replace @analytics/segment with @amplitude/node for anonymous stats</li> </ul>"},{"location":"CHANGELOG/#530-2020-06-29","title":"[5.3.0] 2020-06-29","text":"<ul> <li>New option --failon , replacing <code>--failonerror</code>,<code>--failonwarning</code> and <code>--failoninfo</code>. It can take error, warning or info values (default: none). Previous options remain working but are deprecated and will be removed in a future major version</li> <li>Update help for <code>--fixrules</code> option</li> </ul>"},{"location":"CHANGELOG/#510-2020-06-04","title":"[5.1.0] 2020-06-04","text":"<ul> <li>Install Java 8 using node-jre in case java version found is higher than Java 11 (CodeNarc compatibility is Java 8 to 11)</li> </ul>"},{"location":"CHANGELOG/#503-2020-05-30","title":"[5.0.3] 2020-05-30","text":"<ul> <li>Updated fix rules<ul> <li>Indentation</li> <li>IndentationClosingBrace</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#502-2020-05-27","title":"[5.0.2] 2020-05-27","text":"<ul> <li>Avoid to apply wrong fix in case of CodeNarc false positive</li> <li>New fix rules<ul> <li>BlankLineBeforePackage</li> </ul> </li> <li>Updated fix rules<ul> <li>BracesForIfElse</li> <li>BracesForMethod</li> <li>BracesForTryCatchFinally</li> <li>ClassEndsWithBlankLine</li> <li>ClassStartsWithBlankLine</li> <li>MissingBlankLineAfterImports</li> <li>MissingBlankLineAfterPackage</li> <li>UnnecessaryGroovyImport</li> <li>UnusedImport</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#500-2020-05-25","title":"[5.0.0] 2020-05-25","text":"<ul> <li>BIG BANG: Improve performances, compatibility, architecture and delivery<ul> <li>Get rid of jDeploy dependency<ul> <li>Use own java-caller.js for java commands</li> <li>Update CircleCI config to use <code>npm link</code>instead of <code>jdeploy install</code></li> </ul> </li> <li>Get rid of request dependency<ul> <li>Use axios for promisified http calls</li> </ul> </li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4140-2020-05-22","title":"[4.14.0] 2020-05-22","text":"<ul> <li>Send rule configuration to fix functions</li> <li>Add <code>.gradle</code> files in default linted files</li> <li>Fixes:<ul> <li>Missing number of linted files returned in summary</li> <li>Try to call CodeNarcJava in case there is an error with CodeNarcServer call</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4130-2020-05-20","title":"[4.13.0] 2020-05-20","text":"<ul> <li>Manage to send options for rules sent in <code>rulesets</code>: Ex: <code>Indentation{\"spacesPerIndentLevel\":2,\"severity\":\"warning\"},UnnecessarySemicolon</code></li> <li>New parameter <code>--rulesetsoverridetype</code> : If list of rules sent in rulesets option, defines if they replace rules defined in .groovylintrc.json, or if they are appended</li> </ul>"},{"location":"CHANGELOG/#4120-2020-05-18","title":"[4.12.0] 2020-05-18","text":"<ul> <li>Improve performances and avoid <code>Unknown command: node</code> error by using childProcess.fork to call CodeNarcServer</li> </ul>"},{"location":"CHANGELOG/#4111-2020-05-16","title":"[4.11.1] 2020-05-16","text":"<ul> <li>Detect when crash is related to \"node\" or \"java\" command not found and return a human readable error message</li> </ul>"},{"location":"CHANGELOG/#4110-2020-05-13","title":"[4.11.0] 2020-05-13","text":"<ul> <li>Add CI , rule overrides and crashes in anonymous insights for debugging investigation</li> <li>When used as a module, never crash intentionally with throw, so when called by module, check linter.status and linter.error instead of try/catch<ul> <li>0: ok</li> <li>1: expected error</li> <li>2: unexpected error</li> <li>9: if cancelled request</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#4100-2020-05-12","title":"[4.10.0] 2020-05-12","text":"<ul> <li>Update analytics to use analytics &amp; @analytics-segment instead of insight. If you want to disable anonymous usage stats, you can still use <code>--no-insight</code> option.</li> </ul>"},{"location":"CHANGELOG/#490-2020-05-10","title":"[4.9.0] 2020-05-10","text":"<ul> <li>Add anonymous usage statistics using insight, in order to make new improvements based on how users use this package.<ul> <li>Note: Analytics obviously does not receive sensitive information like your code, as you can see in analytics.js. If you want to disable anonymous usage stats, use <code>--no-insight</code> option.</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#480-2020-05-08","title":"[4.8.0] 2020-05-08","text":"<ul> <li>New fix rules<ul> <li>AssignmentInConditional</li> <li>DuplicateImport</li> <li>ExplicitLinkedListInstantiation</li> <li>InsecureRandom</li> <li>UnnecessaryDefInVariableDeclaration</li> <li>UnnecessaryDotClass</li> <li>UnnecessaryFinalOnPrivateMethod</li> <li>UnnecessaryInstantiationToGetClass</li> </ul> </li> </ul> <ul> <li>Updated fix rules<ul> <li>BracesForForLoop: False positive triggering messy code after fixing</li> <li>UnnecessaryGString: Fix multiline replacements ( <code>\"\"\"</code> by <code>'''</code> )</li> </ul> </li> </ul> <ul> <li>Fixes :<ul> <li>Launch JVM with high memory (<code>-Xms256m -Xmx2048m</code>) to improve performances on big files</li> <li>Increase CodeNarcServ call timeout (+ Manage ETIMEOUT as result, not only ECONNREFUSED )</li> </ul> </li> </ul> <ul> <li>Utils<ul> <li>Allow regex in range functions</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#470-2020-05-06","title":"[4.7.0] 2020-05-06","text":"<ul> <li>New fix rules<ul> <li>BracesForClass</li> <li>BracesForForLoop</li> <li>BracesForIfElse</li> <li>BracesForMethod</li> <li>BracesForTryCatchFinally</li> <li>ExplicitArrayListInstantiation</li> <li>MissingBlankLineAfterImports</li> <li>MissingBlankLineAfterPackage</li> </ul> </li> </ul> <ul> <li>Updated fix rules<ul> <li>UnnecessaryGString: Fix replacements containing <code>\\n</code> and <code>\\r</code></li> </ul> </li> </ul>"},{"location":"CHANGELOG/#460-2020-05-01","title":"[4.6.0] 2020-05-01","text":"<ul> <li>New fix rules<ul> <li>SpaceBeforeClosingBrace</li> <li>UnnecessaryDefInMethodDeclaration</li> <li>UnnecessaryPackageReference</li> <li>UnnecessaryParenthesesForMethodCallWithClosure</li> </ul> </li> </ul> <ul> <li>Updated fix rules<ul> <li>MisorderedStaticImports: Fix <code>@Grapes</code> killer fixing rule</li> <li>ElseBlockBrace :issue when instruction is on the same line than <code>else</code></li> </ul> </li> </ul>"},{"location":"CHANGELOG/#455-2020-04-30","title":"[4.5.5] 2020-04-30","text":"<ul> <li>Fixes<ul> <li>ignorepattern option not working #34</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#452-2020-04-29","title":"[4.5.2] 2020-04-29","text":"<ul> <li>Expose <code>loadConfig()</code> method to load rules when npm-groovy-lint is used as a library</li> <li>Fixes<ul> <li>Missing temporary rulesets file missing</li> <li>Handle better CodeNarcServer concurrent calls</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#451-2020-04-28","title":"[4.5.1] 2020-04-28","text":"<ul> <li>Fixes<ul> <li>Take in account user overridden indentation space (and other rules) when using --format option #31</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#450-2020-04-24","title":"[4.5.0] 2020-04-24","text":"<ul> <li>Configuration updates (#29):<ul> <li>New default config \"recommended-jenkinsfile\". Use it with argument <code>--config recommended-jenkinsfile</code></li> <li>Allow to directly target a config file name. Use it with argument <code>--config /my/custom/path/.groovylintrc-custom-name.json</code></li> <li>Allow to send a string key that will be used to find config file <code>--config custom-name</code></li> </ul> </li> <li>Updated fix rules:<ul> <li>IfStatementBraces</li> <li>ElseStatementBraces</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#441-2020-04-16","title":"[4.4.1] 2020-04-16","text":"<ul> <li>Fixes:<ul> <li>CodeNarcServer: Use cachedThreadPool instead of fixedThreadPool</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#440-2020-04-16","title":"[4.4.0] 2020-04-16","text":"<ul> <li>Cancel a CodeNarc Lint when a similar CodeNarcServer request is received (allowing onType mode for language servers)</li> </ul>"},{"location":"CHANGELOG/#430-2020-04-14","title":"[4.3.0] 2020-04-14","text":"<ul> <li>Allow to disable rules using comments in source in eslint style</li> </ul>"},{"location":"CHANGELOG/#420-2020-04-13","title":"[4.2.0] 2020-04-13","text":"<ul> <li>New option --parse: Capability to parse source code and return compilation errors</li> <li>New fix rules (thanks CatSue !):<ul> <li>SpaceAfterSemicolon</li> <li>SpaceAfterWhile</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#410-2020-04-12","title":"[4.1.0] 2020-04-12","text":"<ul> <li>Upgrade to Groovy 3.0.3</li> <li>Automatic generation of fixable rules list for README</li> <li>Refactor CodeNarcServer.groovy</li> </ul>"},{"location":"CHANGELOG/#400-2020-04-09","title":"[4.0.0] 2020-04-09","text":"<ul> <li>Fix issue affecting performances on Linux and MacOs</li> </ul>"},{"location":"CHANGELOG/#330-2020-04-06","title":"[3.3.0] 2020-04-06","text":"<ul> <li>When formatting, always run some custom npm-groovy-lint fix rules not corresponding to CodeNarc violations</li> <li>Return CodeNarc and Groovy versions when --version options is called</li> <li>Fixes<ul> <li>Lost indentation when applying some fix rules</li> </ul> </li> <li>Updated fix rules:<ul> <li>IndentationClosingBraces</li> <li>IndentationComments</li> <li>SpaceAfterCatch</li> <li>SpaceAfterIf</li> </ul> </li> <li>New fix rules:<ul> <li>ClassEndsWithBlankLine</li> <li>ClassStartsWithNewLine</li> <li>SpaceAfterFor</li> <li>SpaceAfterSwitch</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#324-2020-04-03","title":"[3.2.4] 2020-04-03","text":"<ul> <li>Error message in postinstall if env Node.js is lower than the minimal required (12)</li> </ul>"},{"location":"CHANGELOG/#323-2020-04-02","title":"[3.2.3] 2020-04-02","text":"<ul> <li>When If or Else brackets are fixed,trigger another rule lint &amp; fix only with Indentation rules so CodeNarc recalculate them correctly</li> <li>New option <code>nolintafter</code>: When format or fix is called, a new lint is performed after the fixes to update the error list. If you just want the updated source code and do not care about the error logs, use this parameter to improve performances</li> <li>Fixes<ul> <li>Manage correctly options <code>failonerror</code>, <code>failonwarning</code> and <code>failoninfo</code></li> <li><code>npm-groovy-lint -version</code> now returns version from package.json</li> </ul> </li> <li>Mocha tests updates:<ul> <li>Add stats on calls to CodeNarc (<code>globalThis.codeNarcCallsCounter</code> and <code>globalThis.codeNarcCalls</code>, activated if <code>globalThis.codeNarcCallsCounter</code> is set to 0 before calling NmpGroovyLint)</li> <li>Factorize test classes common code in module helper/common.js</li> <li>Use a smaller groovy file for test classes when not impacting the tests quality</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#322-2020-03-31","title":"[3.2.2] 2020-03-31","text":"<ul> <li>New option returnrules if you want to return rules descriptions and documentation url in results</li> <li>Use npm ci instead of npm install in CircleCI build</li> </ul>"},{"location":"CHANGELOG/#321-2020-03-29","title":"[3.2.1] 2020-03-29","text":"<ul> <li>Return rules descriptions in results</li> <li>New option nolintafter: do not lint again a format or a fix, as the client prefers to request it</li> <li>Fixes<ul> <li>Issue #13: False positive error ClassNameSameAsFileName</li> <li>Sometimes returning wrong .groovylint.json config file</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#320-2020-03-26","title":"[3.2.0] 2020-03-26","text":"<ul> <li>New option \"--format\", allowing to reformat source code (using .groovylintrc-format.json)</li> <li>Update default recommended rules</li> </ul>"},{"location":"CHANGELOG/#313-2020-03-22","title":"[3.1.3] 2020-03-22","text":"<ul> <li>README: Link to Visual Studio Code Groovy Lint extension</li> </ul>"},{"location":"CHANGELOG/#312-2020-03-22","title":"[3.1.2] 2020-03-22","text":"<ul> <li>New Fix rules:<ul> <li>BlockEndsWithBlankLine</li> <li>BlockStartsWithBlankLine</li> <li>MisorderedStaticImports</li> <li>SpaceAfterIf</li> </ul> </li> <li>Fix: Update correctly the lineNb &amp; ranges of next errors after an error has been fixed</li> <li>Do not return rules tests if call is not from a test file</li> <li>Fix rules:<ul> <li>ElseBlockBraces</li> <li>IfStatementBraces</li> <li>SpaceAroundOperator</li> <li>UnusedImport</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#311-2020-03-20","title":"[3.1.1] 2020-03-20","text":"<ul> <li>New Fix rules:<ul> <li>BlockEndsWithBlankLine</li> <li>BlockStartsWithBlankLine</li> <li>MisorderedStaticImports</li> <li>SpaceAfterIf</li> </ul> </li> <li>Updated Fix rules:<ul> <li>SpaceAroundOperator</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#310-2020-03-18","title":"[3.1.0] 2020-03-18","text":"<ul> <li>Test suites: Improve reliability &amp; logs for rule fixes tests (detected numerous bugs, now corrected)</li> <li>Send computed range to fix functions</li> <li>Updated Fix rules:<ul> <li>ClosingBraceNotAlone</li> <li>ElseBlockBraces</li> <li>IfStatementBraces</li> <li>NoTabCharacter</li> <li>SpaceAfterComma</li> <li>SystemExit</li> <li>TrailingWhitespace</li> <li>UnnecessaryGroovyImport</li> <li>UnusedImport</li> </ul> </li> </ul>"},{"location":"CHANGELOG/#301-2020-03-17","title":"[3.0.1] 2020-03-17","text":"<ul> <li>Add new test suites: errors.test.js and miscellaneous.test.js</li> <li>Use JSON as default GroovyLint configuration file type</li> <li>Order of fixable rules must be defined in groovy-lint-rules.js</li> <li>Do not load rules test data except during tests</li> <li>Do not lint again after a call to fixErrors on an existing NpmGroovyLint instance (except if lintAgainAfterFix : true is sent in options)</li> <li>Fix: Deletion of temp RuleSite file</li> <li>Fix: UnnecessarySemiColon rule</li> <li>Fix: ClosingBraceNotAlone rule</li> </ul>"},{"location":"CHANGELOG/#300-2020-03-15","title":"[3.0.0] 2020-03-15","text":"<ul> <li>Local microservice \"CodeNarcServer\" called via Http by npm-groovy-lint, to avoid loading all groovy/java classes at each lint request. This microservice auto-kills itself after one hour idle.</li> <li>Capability to define RuleSets in argument or js/json/yml config file formats instead of groovy/xml RuleSet format</li> <li>Test classes for rules fix (before / after fix defined in rule definitions)</li> <li>Add debug logs (use it by setting DEBUG env variable , ex: <code>DEBUG=npm-groovy-lint npm-groovy-lint args...</code>)</li> <li>Update lines and ranges of other errors after a fix updated the number of lines</li> <li>Generate automatically .groovylintrc-all.js during build</li> <li>Split rules definition into files instead of all in a huge single file</li> <li>Reorganize groovy-lint.js code, using codenarc-factory.js and codenarc-caller.js</li> <li>New lib utils.js that can be used by rules definition</li> <li>Fix: Crash when there was no error found in a file</li> <li>Fix: Remove Promise error display in log after launching CodeNarcServer</li> <li>Fix: Add more options exclusivity arguments rules</li> <li>Removed \"Groovy\", \"Jenkinsfile\" and \"All\" identifiers for --rulesets arguments. Please now use .groovylintrc.js configuration</li> </ul>"},{"location":"CHANGELOG/#220-2020-02-28","title":"[2.2.0] 2020-02-28","text":"<ul> <li>Capability to call NpmGroovyLint with options as object, not only command line arguments</li> <li>New option \"source\", allowing to call NpmGroovyLint with the groovy code as a string , not only path &amp; files pattern</li> <li>Run lint again after fix all errors, to get updated lintResult</li> <li>Add gitattributes to normalized line-endings (thanks docwhat)</li> <li>API: fix only some errors after an initial lint (better performances)</li> <li>Return error range in files for some rules in JSON or API result (will be useful for the VsCode extension currently developed)</li> <li>Define range function for existing rules, new fixable rules</li> </ul>"},{"location":"CHANGELOG/#201-2020-02-21","title":"[2.0.1] - 2020-02-21","text":"<ul> <li>Capability to fix errors<ul> <li>ConsecutiveBlankLines<ul> <li>Indentation (IfStatementBraces and ElseIfStatementBraces must be manually fixed to have correct indentation)</li> <li>IndentationComments (custom npm-groovy-rule triggered by Indentation rule)</li> <li>IndentationClosingBrace (custom npm-groovy-rule triggered by Indentation rule)</li> <li>NoTabCharacter</li> <li>SpaceAfterCatch</li> <li>SpaceAfterOpeningBrace</li> <li>SpaceAroundOperator</li> <li>SpaceAfterComma</li> <li>SpaceBeforeOpeningBrace</li> <li>UnnecessaryDefInFieldDeclaration</li> <li>UnnecessaryGString</li> <li>UnnecessaryPublicModifier</li> <li>UnnecessarySemicolon</li> <li>TrailingWhitespace</li> </ul> </li> </ul> </li> <li>Log formatting with severity colors and summary table</li> <li>Default recommended RuleSets for Groovy and Jenkins</li> <li>Progress bar in console</li> <li>More code coverage with test campaigns</li> <li>New Capability to call NpmGroovyLint from another package (VsCode extension development in progress ^^)</li> <li>Refactored command line arguments ( simpler, but different from CodeNarc ones : retro-compatibility with CodeNarc arguments assured if you add --codenarcargs)</li> <li>Upgrade to CodeNarc v1.5</li> <li>Upgrade to Groovy v3.0.1</li> <li>Refactored documentation with detailed arguments description &amp; examples</li> </ul>"},{"location":"CHANGELOG/#before","title":"Before","text":"<ul> <li>I wasn't serious enough to keep a changelog, sorry !</li> </ul>"}]}